@page "/"
@inject NavigationManager NavigationManager

<PageTitle>Games</PageTitle>

<h1>Game Catalogue</h1>

@if (games == null)
{
    <p>Loading...</p>
}
else
{
    <DeleteGame Game="@currentGame" OnClose="@OnDeleteModalClose" />

    <button class="btn btn-primary my-5" type="button" @onclick="NavToAddGame">Add Game</button>

    <table class="table table-hover">
    <thead class="table-dark">
        <th>Id</th>
        <th>Name</th>
        <th>Genre</th>
        <th>Price</th>
        <th>Release Date</th>
        <th>Actions</th>
    </thead>
    <tbody>
        @foreach (var game in games)
            {
                <tr>
                    <td>@game.Id</td>
                    <td>@game.Name</td>
                    <td>@game.Genre</td>
                    <td>@game.Price</td>
                    <td>@game.ReleaseDate</td>
                    <td>
                        <button class="btn btn-primary" type="button" @onclick="() => NavToEditGame(game.Id)">Edit</button>
                        <button class="btn btn-danger" type="button" data-bs-toggle="modal" data-bs-target="#deleteModal"
                            @onclick="() => currentGame = game">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {

    private Game[]? games;

    private Game? currentGame;

    protected override void OnInitialized()
    {
        games = GameClient.GetGames();
    }

    private void NavToAddGame()
    {
        NavigationManager.NavigateTo("/game/add");
    }

    private void NavToEditGame(int id)
    {
        NavigationManager.NavigateTo($"/game/{id}");
    }

    private void OnDeleteModalClose(bool accepted)
    {
        if (accepted)
        {
            GameClient.DeleteGame(currentGame!.Id);
            games = GameClient.GetGames();
        }
    }
}